hydra:
  run:
    dir: outputs/${hydra.job.name}/${now:%Y-%m-%d_%H-%M-%S}

data:
  num_classes: 9827
  dataset_path: "dataset/sample_data/"
  labels_name: "dataset/sample_data/Presence_only_occurrences/Presences_only_train_sample.csv"
  train_batch_size: 8
  inference_batch_size: 2
  num_workers: 8
  units: "pixel"
  crs: 4326

trainer:
  # gpus: 1  # Deprecated since pytorchlightning 1.7, removed in 2.0. Replaced by the 2 next attributes
  accelerator: 'gpu'
  devices: 'auto'
  max_epochs: 2
  # val_check_interval: 10
  check_val_every_n_epoch: 1

run:
  predict: false
  checkpoint_path: # 'outputs/cnn_on_rgbnir_glc23_patches/2024-08-05_10-13-52/last.ckpt'

model:
  provider_name: "timm"  # choose from ["timm", "torchvision"]
  model_name: "resnet18"
  model_kwargs:
    pretrained: true  # Deprecated in torchvision since 0.13 (replaced by "weights") but used by timm
    num_classes:
    in_chans:
    output_stride:
    global_pool:
  modifiers:
    change_first_convolutional_layer:
     num_input_channels: 4
    change_last_layer:
      num_outputs: ${data.num_classes}

optimizer:
  lr: 1e-2
  weight_decay: 0
  momentum: 0.9
  nesterov: true
  metrics:
    # binary_accuracy:
    #   # callable: 'Fmetrics.accuracy'
    #   kwargs: {}
    multiclass_accuracy:
      # callable: 'Fmetrics.classification.multiclass_accuracy'
      kwargs:
        num_classes: ${data.num_classes}
    multiclass_accuracy_top100:
      callable: 'Fmetrics.classification.multiclass_accuracy'
      kwargs:
        top_k: 30
        num_classes: ${data.num_classes}
    # multilabel_accuracy:
    #   # callable: 'Fmetrics.classification.multilabel_accuracy'
    #   kwargs:
    #     num_labels: ${data.num_classes}

task:
  task: 'classification_multiclass'  # ['classification_binary', 'classification_multiclass', 'classification_multilabel']
