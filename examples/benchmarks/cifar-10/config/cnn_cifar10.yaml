hydra:
  run:
    dir: outputs/${hydra.job.name}/${now:%Y-%m-%d_%H-%M-%S}

run:
  predict: true
  checkpoint_path: "outputs/cnn_cifar10/30_epochs_pretrained/last.ckpt"

data:
  num_classes: &num_classes 10
  dataset_path: "dataset/"
  train_batch_size: 32
  inference_batch_size: 16
  num_workers: 8

task:
  task: "classification_multiclass" # ['classification_binary', 'classification_multiclass', 'classification_multilabel']

trainer:
  # gpus: 1  # Deprecated since pytorchlightning 1.7, removed in 2.0. Replaced by the 2 next attributes
  accelerator: "gpu"
  devices: "auto"
  max_epochs: 30
  # val_check_interval: 2
  check_val_every_n_epoch: 1
  log_every_n_steps: 300

model:
  provider_name: "timm" # choose from ["timm", "torchvision"]
  model_name: "resnet18"
  model_kwargs:
    pretrained: yes # Deprecated in torchvision since 0.13 (replaced by "weights") but used by timm
    num_classes:
    in_chans:
    output_stride:
    global_pool:
  modifiers:
    change_first_convolutional_layer:
      num_input_channels: 3
    change_last_layer:
      num_outputs: *num_classes # set to 1 for binary classification

optimizer:
  lr: 1e-2
  weight_decay: 0
  momentum: 0.9
  nesterov: true
  metrics:
    # binary_accuracy:
    #   # callable: 'Fmetrics.accuracy'
    #   kwargs: {}
    multiclass_accuracy:
      # callable: 'Fmetrics.classification.multiclass_accuracy'
      kwargs:
        num_classes: *num_classes
    # multilabel_accuracy:
    #   # callable: 'Fmetrics.classification.multilabel_accuracy'
    #   kwargs:
    #     num_labels: *num_classes
