hydra:
  run:
    dir: outputs/${hydra.job.name}/${now:%Y-%m-%d_%H-%M-%S}

run:
  predict: false
  checkpoint_path: # "outputs/cnn_on_rgb_patches/train_multiclass/last.ckpt"

data:
  num_classes: &num_classes 10
  dataset_path: "dataset/"
  train_batch_size: 32
  inference_batch_size: 256
  num_workers: 8
  download: true

task:
  task: 'classification_multiclass'

trainer:
  accelerator: 'gpu'
  devices: 1
  max_epochs: 5
  check_val_every_n_epoch: 1
  val_check_interval: 10
  log_every_n_steps: 20  # Controls the frequency of logging. For val loss & metrics: logs accumulated values every n steps. For train loss: logs once every n_steps.

model:
  provider_name: "timm"  # choose from ["timm", "torchvision"]
  model_name: "resnet18"
  model_kwargs:
    pretrained: true  # Deprecated in torchvision since 0.13 (replaced by "weights") but used by timm
    num_classes:
    in_chans:
    output_stride:
    global_pool:
  modifiers:
    change_last_layer:
      num_outputs: *num_classes

optimizer:
  lr: 1e-2
  weight_decay: 0
  momentum: 0.9
  nesterov: true
  metrics:
    multiclass_accuracy:
      kwargs:
        num_classes: *num_classes

loggers:
  exp_name: "resnet18_rgb_microglc22"  # Name of your experiment
  log_dir_name: "tensorboard_logs/"  # Name of the logs directory
