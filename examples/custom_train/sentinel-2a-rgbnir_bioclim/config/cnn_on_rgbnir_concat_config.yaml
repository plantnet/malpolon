hydra:
  run:
    dir: outputs/${hydra.job.name}/${now:%Y-%m-%d_%H-%M-%S}

run:
  predict: false
  checkpoint_path: 'outputs/cnn_on_rgbnir_concat/train_multilabel/last.ckpt'

data:
  num_classes: &num_classes 5
  train_batch_size: 2
  inference_batch_size: 2
  num_workers: 8
  dataset_kwargs:
    - callable: "RasterBioclim"
      kwargs:
        root: "dataset/bioclim_rasters/"
        labels_name: "../sample_obs.csv"
        query_units: "pixel"
        query_crs: 4326
        patch_size: 128
        filename_regex: '(?P<band>bio_[\d])_crop_sample'  # single quotes are mandatory
        bands: ["bio_1", "bio_2", "bio_3", "bio_4"]
        obs_data_columns: {'x': 'longitude',
                           'y': 'latitude',
                           'index': 'surveyId',
                           'species_id': 'speciesId',
                           'split': 'subset'}
    - callable: "PatchesDataset"
      kwargs:
        occurrences: "dataset/sample_obs.csv"
        providers:
          - callable: "JpegPatchProvider"
            kwargs:
              root_path: "dataset/satellite_patches/"
              dataset_stats: 'jpeg_patches_sample_stats.csv'
              id_getitem: "surveyId"
              size: 128
              select: ['red', 'green', 'blue', 'nir']
        item_columns: ['longitude', 'latitude', 'surveyId']

task:
  task: "classification_multilabel" # ['classification_binary', 'classification_multiclass', 'classification_multilabel']

trainer:
  # gpus: 1  # Deprecated since pytorchlightning 1.7, removed in 2.0. Replaced by the 2 next attributes
  accelerator: "gpu"
  devices: 'auto'
  max_epochs: 5
  # val_check_interval: 2
  check_val_every_n_epoch: 1
  log_every_n_steps: 10

model:
  provider_name: "timm" # choose from ["timm", "torchvision"]
  model_name: "resnet18"
  model_kwargs:
    pretrained: true # Deprecated in torchvision since 0.13 (replaced by "weights") but used by timm
    num_classes:
    in_chans:
    output_stride:
    global_pool:
  modifiers:
    change_first_convolutional_layer:
      num_input_channels: 8
    change_last_layer:
      num_outputs: *num_classes

optimizer:
  lr: 1e-2
  weight_decay: 0
  momentum: 0.9
  nesterov: true
  metrics:
    # binary_accuracy:
    #   # callable: 'Fmetrics.accuracy'
    #   kwargs: {}
    # multiclass_accuracy:
    #   # callable: 'Fmetrics.classification.multiclass_accuracy'
    #   kwargs:
    #     num_classes: *num_classes
    multilabel_accuracy:
      # callable: 'Fmetrics.classification.multilabel_accuracy'
      kwargs:
        num_labels: *num_classes